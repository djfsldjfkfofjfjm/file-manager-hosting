// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  username  String    @unique
  password  String
  createdAt DateTime  @default(now())
  projects  Project[]
  uploads   File[]
}

model Project {
  id          String   @id @default(cuid())
  name        String
  description String?
  color       String?
  icon        String?
  isPinned    Boolean  @default(false)
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  folders     Folder[]
  files       File[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
}

model Folder {
  id        String   @id @default(cuid())
  name      String
  path      String
  projectId String
  project   Project  @relation(fields: [projectId], references: [id])
  parentId  String?
  parent    Folder?  @relation("FolderToFolder", fields: [parentId], references: [id])
  children  Folder[] @relation("FolderToFolder")
  files     File[]
  createdAt DateTime @default(now())

  @@index([projectId])
  @@index([parentId])
}

model File {
  id           String    @id @default(cuid())
  filename     String
  originalName String
  mimeType     String
  size         Int
  url          String
  thumbnailUrl String?
  projectId    String
  project      Project   @relation(fields: [projectId], references: [id])
  folderId     String?
  folder       Folder?   @relation(fields: [folderId], references: [id])
  uploadedBy   String
  user         User      @relation(fields: [uploadedBy], references: [id])
  tags         Tag[]
  isDeleted    Boolean   @default(false)
  deletedAt    DateTime?
  metadata     String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  @@index([projectId])
  @@index([folderId])
  @@index([isDeleted])
  @@index([uploadedBy])
}

model Tag {
  id    String @id @default(cuid())
  name  String @unique
  files File[]
}
